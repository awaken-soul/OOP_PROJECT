Logistics and Delivery Management System

1. Introduction
The Logistics and Delivery Management System is a desktop application developed using Java Swing and SQLite, designed to simulate real-world logistics operations. It applies Object-Oriented Programming (OOP) concepts such as classes, inheritance, abstraction, and polymorphism to model entities including Users, Orders, Shipments, Vehicles, Payments, and Warehouses. The system integrates GUI design with database management to provide a complete logistics workflow simulation.

2. User Roles and Features
- Customer: Can place and track orders, request shipments, search and purchase products, request vehicles, and make secure payments.
- Admin: Adds and manages vendors, warehouses, and vehicles with validation, monitors delivery traffic, and addresses complaints and system issues.
- Delivery Agent: Views assigned deliveries, updates order status (Picked Up, In Warehouse, Out for Delivery, Delivered), accepts/rejects requests based on workload, manages delivery history, and receives payment confirmations.
- Warehouse Manager: Monitors stock, manages product queues using FIFO scheduling, assigns items to delivery agents, tracks incoming shipments, and maintains warehouse performance reports.

3. Core Modules
- Shipment of Product: Handles user requests, assigns delivery agents based on proximity and availability, queues products in warehouses, and manages delivery to destinations.
- Purchase of Product: Facilitates product search, retailer selection, and direct shipment without warehouse involvement.
- Vehicle Management: Users request vehicles; system checks availability, provides driver details, and simulates location updates.
- Payment Module: Supports Card, UPI, Wallet, and Invoice-based payments; maintains transaction history and updates dashboards.
- Tracking Module: Generates tracking IDs, updates agent locations and order statuses, and provides visual progress tracking for users and admins.

4. GUI Design
- Login Page: Role-based authentication for all users.
- User Dashboard: Displays shipment, purchase, transport, and payment history with charts and progress views.
- Admin Dashboard: Summarizes system health, including active orders, pending deliveries, available vehicles, and warehouse stock; provides access to vendor, warehouse, and vehicle management modules.
- Delivery Agent/Warehouse Manager Dashboard: Delivery agents see current and past deliveries; warehouse managers view stock summaries, pending shipments, and agent availability.

5. Conclusion
By combining OOP principles, interactive GUI design, and SQLite database management, the system provides a comprehensive solution for logistics operations. It supports order placement, tracking, delivery scheduling, vehicle management, payment processing, and inventory monitoring, serving as a practical simulation of real-world logistics workflows and a hands-on implementation of software design concepts.
